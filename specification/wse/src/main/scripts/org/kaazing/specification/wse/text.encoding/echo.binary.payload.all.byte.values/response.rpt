#
# Copyright 2007-2015, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property upstreamId ${wse:uniqueId()}
property downstreamId ${wse:uniqueId()}
property upstream ${wse:append("http://localhost:8080/path/", upstreamId)}
property downstream ${wse:append("http://localhost:8080/path/", downstreamId)}

property allPossibleBytes ${wse:allBytes()}
property utf8AllBytes ${wse:encodeBytesAsUtf8(allPossibleBytes)}

accept http://localhost:8080/path/;e/ctm?query
accepted
connected

read method "POST"
read version "HTTP/1.1"
read header "X-WebSocket-Version" "wseb-1.0"
read header "X-Sequence-No" /(?<sequence>[0-9]{1,3})/
read closed

write status "201" "Created" 
write version "HTTP/1.1"
write header "Content-Type" "text/plain;charset=utf-8"
write header content-length

write ${upstream} "\n"
write ${downstream} "\n"
write notify CREATE_COMPLETED
write close

# Downstream
accept ${downstream}
accepted
connected

read await CREATE_COMPLETED
read method "GET"
read version "HTTP/1.1"
read header "X-Sequence-No" ${wse:asString(sequence + 1)}
read closed

write status "200" "OK"
write version "HTTP/1.1"
write header "Content-Type" "text/plain;charset=windows-1252"
write header "Connection" "close"
write flush

write await DATA_RECEIVED
write [0x80 0x82 0x00]
write ${allPossibleBytes}
write flush

# Upstream
accept ${upstream}
accepted
connected

read await CREATE_COMPLETED
read method "POST"
read version "HTTP/1.1"
read header "Content-Type" /text\/plain;charset=(?i)utf-8/
read header "X-Sequence-No" ${wse:asString(sequence + 1)}

read [0xC2 0x80 0xC2 0x82 0x00]
# Encoded data length is 3 * 128 because half the bytes have leading bit set so need 2 bytes in UTF-8
read ${utf8AllBytes}
read notify DATA_RECEIVED

